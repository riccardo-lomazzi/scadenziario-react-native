import PushNotification from 'react-native-push-notification';

export default class NotifService {

  constructor(onRegister, onNotification) {
    this.configure(onRegister, onNotification);

    this.lastId = 0;
  }

  configure(onRegister, onNotification, gcm = "") {
    PushNotification.configure({
      // (optional) Called when Token is generated (iOS and Android)
      onRegister: onRegister, //this._onRegister.bind(this),

      // (required) Called when a remote or local notification is opened or received
      onNotification: onNotification, //this._onNotification,

      // ANDROID ONLY: GCM Sender ID (optional - not required for local notifications, but is need to receive remote push notifications)
      senderID: gcm,

      // IOS ONLY (optional): default: all - Permissions to register.
      permissions: {
        alert: true,
        badge: true,
        sound: true
      },

      // Should the initial notification be popped automatically
      // default: true
      popInitialNotification: true,

      /**
        * (optional) default: true
        * - Specified if permissions (ios) and token (android and ios) will requested or not,
        * - if not, you must call PushNotificationsHandler.requestPermissions() later
        */
      requestPermissions: true,
    });
  }

  // scheduleNotif(notifications) {
  //   this.lastId++;
  //   for (let date in notifications) {
  //     PushNotification.localNotificationSchedule({
  //       date: new Date(Number(date)),

  //       /* Android Only Properties */
  //       id: '' + this.lastId, // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
  //       autoCancel: true, // (optional) default: true
  //       largeIcon: "ic_notification", // (optional) default: "ic_launcher"
  //       smallIcon: "ic_notification", // (optional) default: "ic_notification" with fallback for "ic_launcher"
  //       color: "blue", // (optional) default: system default
  //       vibrate: false, // (optional) default: true
  //       ongoing: false, // (optional) set whether this is an "ongoing" notification

  //       /* iOS only properties */
  //       alertAction: 'view', // (optional) default: view
  //       category: null, // (optional) default: null
  //       userInfo: null, // (optional) default: null (object containing additional notification data)

  //       /* iOS and Android properties */
  //       title: "Oggi in scadenza", // (optional)
  //       message: notifications[date], // (required)
  //       playSound: true, // (optional) default: true
  //       soundName: 'default', // (optional) Sound to play when the notification is shown. Value of 'default' plays the default sound. It can be set to a custom sound such as 'android.resource://com.xyz/raw/my_sound'. It will look for the 'my_sound' audio file in 'res/raw' directory and play it. default: 'default' (default sound is played)
  //     });
  //   }
  // }

  async scheduleNotif({ date, message }) {
    this.lastId++;
    PushNotification.localNotificationSchedule({
      date,
      /* Android Only Properties */
      id: '' + this.lastId, // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
      autoCancel: true, // (optional) default: true
      largeIcon: "ic_notification", // (optional) default: "ic_launcher"
      smallIcon: "ic_notification", // (optional) default: "ic_notification" with fallback for "ic_launcher"
      color: "blue", // (optional) default: system default
      vibrate: false, // (optional) default: true
      ongoing: false, // (optional) set whether this is an "ongoing" notification

      /* iOS only properties */
      alertAction: 'view', // (optional) default: view
      category: null, // (optional) default: null
      userInfo: null, // (optional) default: null (object containing additional notification data)

      /* iOS and Android properties */
      title: "Oggi in scadenza", // (optional)
      message, // (required)
      playSound: true, // (optional) default: true
      soundName: 'default', // (optional) Sound to play when the notification is shown. Value of 'default' plays the default sound. It can be set to a custom sound such as 'android.resource://com.xyz/raw/my_sound'. It will look for the 'my_sound' audio file in 'res/raw' directory and play it. default: 'default' (default sound is played)
    });
  }

  cancelNotif() {
    PushNotification.cancelLocalNotifications({ id: '' + this.lastId });
  }

  cancelAll() {
    PushNotification.cancelAllLocalNotifications();
  }
}